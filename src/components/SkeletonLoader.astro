---
export interface Props {
  variant?: 'card' | 'text' | 'hero' | 'image';
  count?: number;
  height?: string;
  width?: string;
  className?: string;
}

const { 
  variant = 'card', 
  count = 1, 
  height, 
  width, 
  className = '' 
} = Astro.props;

const skeletons = Array.from({ length: count }, (_, i) => i);
---

<div class={`skeleton-container ${className}`}>
  {skeletons.map(() => (
    <div class={`skeleton skeleton-${variant}`} style={`${height ? `height: ${height};` : ''} ${width ? `width: ${width};` : ''}`}>
      {variant === 'card' && (
        <>
          <div class="skeleton-image"></div>
          <div class="skeleton-content">
            <div class="skeleton-title"></div>
            <div class="skeleton-text"></div>
            <div class="skeleton-text skeleton-text-short"></div>
          </div>
        </>
      )}
      
      {variant === 'text' && (
        <>
          <div class="skeleton-line"></div>
          <div class="skeleton-line skeleton-line-short"></div>
        </>
      )}
      
      {variant === 'hero' && (
        <>
          <div class="skeleton-hero-title"></div>
          <div class="skeleton-hero-subtitle"></div>
          <div class="skeleton-hero-actions">
            <div class="skeleton-button"></div>
            <div class="skeleton-button skeleton-button-secondary"></div>
          </div>
        </>
      )}
      
      {variant === 'image' && (
        <div class="skeleton-image-only"></div>
      )}
    </div>
  ))}
</div>

<style>
  .skeleton-container {
    display: flex;
    flex-direction: column;
    gap: var(--space-4);
  }
  
  .skeleton {
    background: var(--glass);
    border: 1px solid var(--border);
    border-radius: var(--radius);
    overflow: hidden;
    position: relative;
  }
  
  .skeleton::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(124, 247, 212, 0.1),
      transparent
    );
    animation: shimmer 2s infinite;
  }
  
  @keyframes shimmer {
    0% {
      left: -100%;
    }
    100% {
      left: 100%;
    }
  }
  
  /* Card skeleton */
  .skeleton-card {
    height: 400px;
    display: flex;
    flex-direction: column;
  }
  
  .skeleton-image {
    height: 200px;
    background: var(--bg-soft);
    border-radius: var(--radius) var(--radius) 0 0;
  }
  
  .skeleton-content {
    padding: var(--space-6);
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: var(--space-3);
  }
  
  .skeleton-title {
    height: 24px;
    background: var(--bg-soft);
    border-radius: var(--radius-sm);
    width: 80%;
  }
  
  .skeleton-text {
    height: 16px;
    background: var(--bg-soft);
    border-radius: var(--radius-sm);
    width: 100%;
  }
  
  .skeleton-text-short {
    width: 60%;
  }
  
  /* Text skeleton */
  .skeleton-text .skeleton-line {
    height: 20px;
    background: var(--bg-soft);
    border-radius: var(--radius-sm);
    margin-bottom: var(--space-2);
  }
  
  .skeleton-line-short {
    width: 70%;
  }
  
  /* Hero skeleton */
  .skeleton-hero {
    padding: var(--space-20) var(--space-6);
    text-align: center;
    min-height: 500px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: var(--space-6);
  }
  
  .skeleton-hero-title {
    height: 48px;
    background: var(--bg-soft);
    border-radius: var(--radius-sm);
    width: 60%;
    max-width: 600px;
  }
  
  .skeleton-hero-subtitle {
    height: 24px;
    background: var(--bg-soft);
    border-radius: var(--radius-sm);
    width: 40%;
    max-width: 400px;
  }
  
  .skeleton-hero-actions {
    display: flex;
    gap: var(--space-4);
    justify-content: center;
  }
  
  .skeleton-button {
    height: 48px;
    width: 140px;
    background: var(--bg-soft);
    border-radius: var(--radius);
  }
  
  .skeleton-button-secondary {
    background: var(--border);
  }
  
  /* Image skeleton */
  .skeleton-image-only {
    width: 100%;
    height: 200px;
    background: var(--bg-soft);
    border-radius: var(--radius);
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .skeleton-hero {
      padding: var(--space-12) var(--space-4);
      min-height: 400px;
    }
    
    .skeleton-hero-title {
      height: 36px;
      width: 80%;
    }
    
    .skeleton-hero-subtitle {
      width: 70%;
    }
    
    .skeleton-hero-actions {
      flex-direction: column;
      align-items: center;
    }
    
    .skeleton-content {
      padding: var(--space-4);
    }
  }
  
  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .skeleton::before {
      animation: none;
    }
  }
</style>