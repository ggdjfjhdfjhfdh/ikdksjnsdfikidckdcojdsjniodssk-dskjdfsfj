---
import "../../public/styles/emergency-modal.css";
import EmergencyIncidentWizard from "./EmergencyIncidentWizard.astro";

interface Props {
  contactInfo?: {
    email: string;
    phone: string;
    whatsapp: string;
  };
}

const {
  contactInfo = {
    email: "info@sesec.es",
    phone: "+34 614 420 875",
    whatsapp: "+34614420875",
  },
} = Astro.props;
---

<div id="emergency-modal" class="emergency-modal">
  <div class="modal-backdrop"></div>
  <div class="modal-container">
    <div class="modal-content">
      <div class="modal-header">
        <h2 class="modal-title">Emergencia de Seguridad</h2>
        <button class="close-modal" type="button" aria-label="Cerrar modal">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <line x1="18" y1="6" x2="6" y2="18"></line>
            <line x1="6" y1="6" x2="18" y2="18"></line>
          </svg>
        </button>
      </div>
      <div class="modal-body">
  <div class="emergency-contacts">
    <div class="contact-buttons">
      <a
        href={`https://wa.me/${contactInfo.whatsapp}?text=Necesito%20ayuda%20urgente%20con%20un%20incidente%20de%20seguridad`}
        class="contact-button whatsapp"
        tabindex="0"
      >
        <svg class="icon icon-whatsapp" viewBox="0 0 24 24">
          <path
            d="M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"
          ></path>
        </svg>
        WhatsApp
      </a>

      <a
        href={`mailto:${contactInfo.email}`}
        class="contact-button email"
        tabindex="0"
      >
        <svg class="icon icon-mail" viewBox="0 0 24 24">
          <path
            d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"
          ></path>
          <polyline points="22,6 12,13 2,6"></polyline>
        </svg>
        Email
      </a>

      <a
        href={`tel:${contactInfo.phone}`}
        class="contact-button phone"
        tabindex="0"
      >
        <svg class="icon icon-phone" viewBox="0 0 24 24">
          <path
            d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"
          ></path>
        </svg>
        Teléfono
      </a>
    </div>

    <!-- Botón para abrir el wizard de incidente urgente -->
    <div class="wizard-launcher">
      <button id="open-wizard-btn" type="button" class="cta-button">
        Crear ticket de incidente urgente
      </button>
    </div>
  </div>

  <hr class="divider" />

  <!-- Incluir el wizard modal (import estático) -->
  <EmergencyIncidentWizard contactInfo={contactInfo} />

  <script type="module" data-cfasync="false">
    (function attachWizardHandlers() {
      function init() {
        const openBtn = document.getElementById("open-wizard-btn");
        const wizardModal = document.getElementById("emergency-wizard-modal");

        // Exit if no modal found yet
        if (!wizardModal) {
          console.warn("Modal not found, retrying in 100ms");
          setTimeout(init, 100);
          return;
        }

        const closeBtn = wizardModal.querySelector(".close-modal");

        // Move to body for proper stacking
        if (wizardModal.parentElement !== document.body) {
          document.body.appendChild(wizardModal);
        }

        // Reset initial state
        wizardModal.style.display = "none";
        wizardModal.classList.remove("active");

        if (openBtn) {
          openBtn.addEventListener("click", (e) => {
            e.preventDefault();
            console.log("Abriendo wizard de emergencia...");
            
            // Usar la función global del wizard si está disponible
            if (typeof window.showEmergencyWizard === 'function') {
              window.showEmergencyWizard();
            } else {
              // Fallback: mostrar directamente
              wizardModal.style.display = "block";
              requestAnimationFrame(() => {
                wizardModal.classList.add("active");
                document.body.style.overflow = "hidden";
              });
            }
          });
        }

        if (closeBtn) {
          closeBtn.addEventListener("click", () => {
            wizardModal.classList.remove("active");
            document.body.style.overflow = "";
            setTimeout(() => (wizardModal.style.display = "none"), 250);
          });
        }

        // Cerrar con Escape
        document.addEventListener("keydown", (e) => {
          if (e.key === "Escape" && wizardModal.classList.contains("active")) {
            wizardModal.classList.remove("active");
            document.body.style.overflow = "";
            setTimeout(() => (wizardModal.style.display = "none"), 250);
          }
        });
      }

      if (document.readyState === "loading") {
        document.addEventListener("DOMContentLoaded", init);
      } else {
        init();
      }
    })();
  </script>
      </div>
    </div>
  </div>
</div>
