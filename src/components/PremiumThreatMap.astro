---
// Componente Premium de Mapa Interactivo de Ciberataques
// Visualizaci√≥n avanzada con animaciones y efectos en tiempo real

interface Props {
  threatData?: any;
  height?: string;
  showAnimations?: boolean;
}

const { 
  threatData = null, 
  height = '600px',
  showAnimations = true 
} = Astro.props;

// Procesar datos geogr√°ficos con mayor detalle
function processAdvancedGeoData(data) {
  if (!data) return [];
  
  const regions = [
    { 
      id: 'na', 
      name: 'Am√©rica del Norte', 
      x: 150, 
      y: 120, 
      threats: 0, 
      attacks: 0,
      color: '#10b981',
      pulse: false,
      countries: ['US', 'CA', 'MX']
    },
    { 
      id: 'sa', 
      name: 'Am√©rica del Sur', 
      x: 200, 
      y: 280, 
      threats: 0, 
      attacks: 0,
      color: '#10b981',
      pulse: false,
      countries: ['BR', 'AR', 'CL', 'CO', 'PE']
    },
    { 
      id: 'eu', 
      name: 'Europa', 
      x: 400, 
      y: 100, 
      threats: 0, 
      attacks: 0,
      color: '#10b981',
      pulse: false,
      countries: ['GB', 'DE', 'FR', 'IT', 'ES', 'NL', 'RU']
    },
    { 
      id: 'af', 
      name: '√Åfrica', 
      x: 420, 
      y: 220, 
      threats: 0, 
      attacks: 0,
      color: '#10b981',
      pulse: false,
      countries: ['NG', 'ZA', 'EG', 'KE', 'MA']
    },
    { 
      id: 'as', 
      name: 'Asia', 
      x: 550, 
      y: 140, 
      threats: 0, 
      attacks: 0,
      color: '#10b981',
      pulse: false,
      countries: ['CN', 'IN', 'JP', 'KR', 'TH', 'SG', 'ID']
    },
    { 
      id: 'oc', 
      name: 'Ocean√≠a', 
      x: 650, 
      y: 300, 
      threats: 0, 
      attacks: 0,
      color: '#10b981',
      pulse: false,
      countries: ['AU', 'NZ']
    }
  ];

  // Mapear pa√≠ses a regiones
  const countryToRegion = {
    'US': 'na', 'CA': 'na', 'MX': 'na',
    'BR': 'sa', 'AR': 'sa', 'CL': 'sa', 'CO': 'sa', 'PE': 'sa',
    'GB': 'eu', 'DE': 'eu', 'FR': 'eu', 'IT': 'eu', 'ES': 'eu', 'NL': 'eu', 'RU': 'eu',
    'NG': 'af', 'ZA': 'af', 'EG': 'af', 'KE': 'af', 'MA': 'af',
    'CN': 'as', 'IN': 'as', 'JP': 'as', 'KR': 'as', 'TH': 'as', 'SG': 'as', 'ID': 'as',
    'AU': 'oc', 'NZ': 'oc'
  };

  // Procesar datos de m√∫ltiples fuentes
  if (data.cloudflare?.topCountries) {
    data.cloudflare.topCountries.forEach(country => {
      const regionId = countryToRegion[country.country] || 'as';
      const region = regions.find(r => r.id === regionId);
      if (region) {
        region.threats += country.value || 0;
        region.attacks += Math.floor((country.value || 0) * 100);
      }
    });
  }

  if (data.ransomwatch?.geographicDistribution) {
    Object.entries(data.ransomwatch.geographicDistribution).forEach(([country, count]) => {
      const regionId = countryToRegion[country] || 'as';
      const region = regions.find(r => r.id === regionId);
      if (region) {
        region.threats += count * 2;
        region.attacks += count * 50;
      }
    });
  }

  // Asignar colores y efectos basados en nivel de amenaza
  regions.forEach(region => {
    if (region.threats > 100) {
      region.color = '#dc2626'; // Rojo cr√≠tico
      region.pulse = true;
    } else if (region.threats > 50) {
      region.color = '#ea580c'; // Naranja alto
      region.pulse = true;
    } else if (region.threats > 25) {
      region.color = '#d97706'; // Amarillo medio
      region.pulse = false;
    } else if (region.threats > 10) {
      region.color = '#059669'; // Verde bajo
      region.pulse = false;
    } else {
      region.color = '#10b981'; // Verde m√≠nimo
      region.pulse = false;
    }
  });

  return regions;
}

const regions = processAdvancedGeoData(threatData);
const totalAttacks = regions.reduce((sum, r) => sum + r.attacks, 0);
const activeThreats = regions.filter(r => r.threats > 0).length;
---

<div class="premium-threat-map" style={`height: ${height}`}>
  <div class="map-header-premium">
    <div class="map-title">
      <h3>üåç Centro de Comando de Ciberataques</h3>
      <div class="live-indicator">
        <div class="pulse-dot"></div>
        <span>EN VIVO</span>
      </div>
    </div>
    <div class="threat-stats">
      <div class="stat-item">
        <span class="stat-value">{totalAttacks.toLocaleString()}</span>
        <span class="stat-label">Ataques Detectados</span>
      </div>
      <div class="stat-item">
        <span class="stat-value">{activeThreats}</span>
        <span class="stat-label">Regiones Activas</span>
      </div>
    </div>
  </div>

  <div class="map-canvas">
    <svg viewBox="0 0 800 400" class="world-map">
      <!-- Fondo del mapa con gradiente -->
      <defs>
        <radialGradient id="mapGradient" cx="50%" cy="50%" r="50%">
          <stop offset="0%" style="stop-color:#1e293b;stop-opacity:1" />
          <stop offset="100%" style="stop-color:#0f172a;stop-opacity:1" />
        </radialGradient>
        
        <!-- Filtros para efectos -->
        <filter id="glow">
          <feGaussianBlur stdDeviation="3" result="coloredBlur"/>
          <feMerge> 
            <feMergeNode in="coloredBlur"/>
            <feMergeNode in="SourceGraphic"/> 
          </feMerge>
        </filter>
        
        <filter id="pulse">
          <feGaussianBlur stdDeviation="2" result="coloredBlur"/>
          <feMerge> 
            <feMergeNode in="coloredBlur"/>
            <feMergeNode in="SourceGraphic"/> 
          </feMerge>
        </filter>
      </defs>
      
      <rect width="100%" height="100%" fill="url(#mapGradient)"/>
      
      <!-- L√≠neas de conexi√≥n entre regiones -->
      <g class="connection-lines">
        <line x1="150" y1="120" x2="400" y2="100" stroke="#334155" stroke-width="1" opacity="0.3"/>
        <line x1="400" y1="100" x2="550" y2="140" stroke="#334155" stroke-width="1" opacity="0.3"/>
        <line x1="150" y1="120" x2="200" y2="280" stroke="#334155" stroke-width="1" opacity="0.3"/>
        <line x1="400" y1="100" x2="420" y2="220" stroke="#334155" stroke-width="1" opacity="0.3"/>
        <line x1="550" y1="140" x2="650" y2="300" stroke="#334155" stroke-width="1" opacity="0.3"/>
      </g>
      
      <!-- Regiones con amenazas -->
      {regions.map((region) => (
        <g class="region-group" data-region={region.id}>
          <!-- C√≠rculo de fondo -->
          <circle 
            cx={region.x} 
            cy={region.y} 
            r="25" 
            fill={region.color}
            opacity="0.3"
            class={region.pulse ? 'pulse-animation' : ''}
          />
          
          <!-- C√≠rculo principal -->
          <circle 
            cx={region.x} 
            cy={region.y} 
            r={Math.max(15, Math.min(30, region.threats / 5 + 15))} 
            fill={region.color}
            filter="url(#glow)"
            class={`region-circle ${region.pulse ? 'pulse-animation' : ''}`}
            data-threats={region.threats}
            data-attacks={region.attacks}
            data-name={region.name}
          />
          
          <!-- Indicador de actividad -->
          {region.threats > 50 && (
            <circle 
              cx={region.x} 
              cy={region.y} 
              r="35" 
              fill="none"
              stroke={region.color}
              stroke-width="2"
              opacity="0.6"
              class="activity-ring"
            />
          )}
          
          <!-- Texto de la regi√≥n -->
          <text 
            x={region.x} 
            y={region.y + 45} 
            text-anchor="middle" 
            fill="#e2e8f0" 
            font-size="12" 
            font-weight="600"
          >
            {region.name}
          </text>
          
          <!-- Contador de amenazas -->
          <text 
            x={region.x} 
            y={region.y + 5} 
            text-anchor="middle" 
            fill="white" 
            font-size="10" 
            font-weight="bold"
          >
            {region.threats > 0 ? region.threats : ''}
          </text>
        </g>
      ))}
      
      <!-- Efectos de part√≠culas para regiones activas -->
      {regions.filter(r => r.threats > 25).map((region, index) => (
        <g class="particle-effects">
          <circle 
            cx={region.x + Math.sin(index) * 40} 
            cy={region.y + Math.cos(index) * 40} 
            r="2" 
            fill={region.color}
            opacity="0.8"
            class="floating-particle"
            style={`animation-delay: ${index * 0.5}s`}
          />
          <circle 
            cx={region.x - Math.sin(index) * 35} 
            cy={region.y - Math.cos(index) * 35} 
            r="1.5" 
            fill={region.color}
            opacity="0.6"
            class="floating-particle"
            style={`animation-delay: ${index * 0.7}s`}
          />
        </g>
      ))}
    </svg>
    
    <!-- Tooltip para informaci√≥n detallada -->
    <div id="map-tooltip" class="map-tooltip">
      <div class="tooltip-header">
        <span class="tooltip-title"></span>
        <span class="tooltip-status"></span>
      </div>
      <div class="tooltip-content">
        <div class="tooltip-stat">
          <span class="tooltip-label">Nivel de Amenaza:</span>
          <span class="tooltip-value threats"></span>
        </div>
        <div class="tooltip-stat">
          <span class="tooltip-label">Ataques Detectados:</span>
          <span class="tooltip-value attacks"></span>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Leyenda premium -->
  <div class="premium-legend">
    <div class="legend-title">Niveles de Amenaza</div>
    <div class="legend-items">
      <div class="legend-item">
        <div class="legend-indicator critical"></div>
        <span>Cr√≠tico (100+)</span>
      </div>
      <div class="legend-item">
        <div class="legend-indicator high"></div>
        <span>Alto (50-99)</span>
      </div>
      <div class="legend-item">
        <div class="legend-indicator medium"></div>
        <span>Medio (25-49)</span>
      </div>
      <div class="legend-item">
        <div class="legend-indicator low"></div>
        <span>Bajo (10-24)</span>
      </div>
      <div class="legend-item">
        <div class="legend-indicator minimal"></div>
        <span>M√≠nimo (0-9)</span>
      </div>
    </div>
  </div>
</div>

<style>
  .premium-threat-map {
    background: linear-gradient(135deg, #0f172a 0%, #1e293b 50%, #334155 100%);
    border-radius: 1rem;
    padding: 1.5rem;
    position: relative;
    overflow: hidden;
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
    border: 1px solid rgba(148, 163, 184, 0.1);
  }
  
  .map-header-premium {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid rgba(148, 163, 184, 0.1);
  }
  
  .map-title {
    display: flex;
    align-items: center;
    gap: 1rem;
  }
  
  .map-title h3 {
    color: #e2e8f0;
    font-size: 1.5rem;
    font-weight: 700;
    margin: 0;
    background: linear-gradient(135deg, #60a5fa, #34d399);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
  
  .live-indicator {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    background: rgba(239, 68, 68, 0.1);
    padding: 0.25rem 0.75rem;
    border-radius: 9999px;
    border: 1px solid rgba(239, 68, 68, 0.3);
  }
  
  .pulse-dot {
    width: 8px;
    height: 8px;
    background: #ef4444;
    border-radius: 50%;
    animation: pulse 2s infinite;
  }
  
  .live-indicator span {
    color: #ef4444;
    font-size: 0.75rem;
    font-weight: 600;
    letter-spacing: 0.05em;
  }
  
  .threat-stats {
    display: flex;
    gap: 2rem;
  }
  
  .stat-item {
    text-align: center;
  }
  
  .stat-value {
    display: block;
    color: #60a5fa;
    font-size: 1.5rem;
    font-weight: 700;
    line-height: 1;
  }
  
  .stat-label {
    color: #94a3b8;
    font-size: 0.75rem;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }
  
  .map-canvas {
    position: relative;
    background: rgba(15, 23, 42, 0.5);
    border-radius: 0.75rem;
    overflow: hidden;
    border: 1px solid rgba(148, 163, 184, 0.1);
  }
  
  .world-map {
    width: 100%;
    height: 100%;
  }
  
  .region-circle {
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .region-circle:hover {
    transform: scale(1.1);
    filter: url(#glow) brightness(1.2);
  }
  
  .pulse-animation {
    animation: regionPulse 2s infinite;
  }
  
  .activity-ring {
    animation: ringExpand 3s infinite;
  }
  
  .floating-particle {
    animation: float 4s infinite ease-in-out;
  }
  
  .map-tooltip {
    position: absolute;
    background: rgba(15, 23, 42, 0.95);
    border: 1px solid rgba(148, 163, 184, 0.2);
    border-radius: 0.5rem;
    padding: 1rem;
    pointer-events: none;
    opacity: 0;
    transform: translateY(10px);
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
    z-index: 1000;
    min-width: 200px;
  }
  
  .tooltip-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 0.5rem;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid rgba(148, 163, 184, 0.1);
  }
  
  .tooltip-title {
    color: #e2e8f0;
    font-weight: 600;
  }
  
  .tooltip-status {
    background: #ef4444;
    color: white;
    padding: 0.125rem 0.5rem;
    border-radius: 9999px;
    font-size: 0.75rem;
    font-weight: 500;
  }
  
  .tooltip-stat {
    display: flex;
    justify-content: space-between;
    margin-bottom: 0.25rem;
  }
  
  .tooltip-label {
    color: #94a3b8;
    font-size: 0.875rem;
  }
  
  .tooltip-value {
    color: #e2e8f0;
    font-weight: 600;
  }
  
  .tooltip-value.threats {
    color: #f59e0b;
  }
  
  .tooltip-value.attacks {
    color: #ef4444;
  }
  
  .premium-legend {
    margin-top: 1.5rem;
    padding-top: 1rem;
    border-top: 1px solid rgba(148, 163, 184, 0.1);
  }
  
  .legend-title {
    color: #e2e8f0;
    font-weight: 600;
    margin-bottom: 0.75rem;
    font-size: 0.875rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }
  
  .legend-items {
    display: flex;
    gap: 1.5rem;
    flex-wrap: wrap;
  }
  
  .legend-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .legend-item span {
    color: #94a3b8;
    font-size: 0.75rem;
    font-weight: 500;
  }
  
  .legend-indicator {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    position: relative;
  }
  
  .legend-indicator.critical {
    background: #dc2626;
    box-shadow: 0 0 10px rgba(220, 38, 38, 0.5);
  }
  
  .legend-indicator.high {
    background: #ea580c;
    box-shadow: 0 0 8px rgba(234, 88, 12, 0.5);
  }
  
  .legend-indicator.medium {
    background: #d97706;
  }
  
  .legend-indicator.low {
    background: #059669;
  }
  
  .legend-indicator.minimal {
    background: #10b981;
  }
  
  /* Animaciones */
  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
  }
  
  @keyframes regionPulse {
    0%, 100% {
      transform: scale(1);
      opacity: 1;
    }
    50% {
      transform: scale(1.1);
      opacity: 0.8;
    }
  }
  
  @keyframes ringExpand {
    0% {
      transform: scale(1);
      opacity: 0.8;
    }
    100% {
      transform: scale(1.5);
      opacity: 0;
    }
  }
  
  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
      opacity: 0.8;
    }
    50% {
      transform: translateY(-10px);
      opacity: 0.4;
    }
  }
  
  /* Responsive */
  @media (max-width: 768px) {
    .map-header-premium {
      flex-direction: column;
      gap: 1rem;
      align-items: flex-start;
    }
    
    .threat-stats {
      gap: 1rem;
    }
    
    .legend-items {
      gap: 1rem;
    }
    
    .map-title h3 {
      font-size: 1.25rem;
    }
  }
</style>

<script>
  // Interactividad del mapa
  document.addEventListener('DOMContentLoaded', function() {
    const tooltip = document.getElementById('map-tooltip');
    const regions = document.querySelectorAll('.region-circle');
    
    regions.forEach(region => {
      region.addEventListener('mouseenter', function(e) {
        const threats = this.getAttribute('data-threats');
        const attacks = this.getAttribute('data-attacks');
        const name = this.getAttribute('data-name');
        
        tooltip.querySelector('.tooltip-title').textContent = name;
        tooltip.querySelector('.tooltip-value.threats').textContent = threats;
        tooltip.querySelector('.tooltip-value.attacks').textContent = parseInt(attacks).toLocaleString();
        
        tooltip.style.opacity = '1';
        tooltip.style.transform = 'translateY(0)';
      });
      
      region.addEventListener('mouseleave', function() {
        tooltip.style.opacity = '0';
        tooltip.style.transform = 'translateY(10px)';
      });
      
      region.addEventListener('mousemove', function(e) {
        const rect = e.target.closest('.premium-threat-map').getBoundingClientRect();
        tooltip.style.left = (e.clientX - rect.left + 10) + 'px';
        tooltip.style.top = (e.clientY - rect.top - 10) + 'px';
      });
    });
  });
</script>